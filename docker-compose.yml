version: '3.8'

services:
  vsph-config-server:
    container_name: vsph-config-server
    ports:
      - '5160:8888'
    image: milosz08/vsph-config-server:latest
    pull_policy: always
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'
      - 'VSPH_VAULT_ROOT_TOKEN=${VSPH_VAULT_ROOT_TOKEN}'
      - 'VSPH_SPRING_CONFIG_USERNAME=${VSPH_SPRING_CONFIG_USERNAME}'
      - 'VSPH_SPRING_CONFIG_PASSWORD=${VSPH_SPRING_CONFIG_PASSWORD}'
    networks:
      - visphere-infra-network

  vsph-discovery-server:
    container_name: vsph-discovery-server
    ports:
      - '5161:8761'
    image: milosz08/vsph-discovery-server:latest
    pull_policy: always
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'
      - 'VSPH_VAULT_ROOT_TOKEN=${VSPH_VAULT_ROOT_TOKEN}'
      - 'VSPH_SPRING_CONFIG_USERNAME=${VSPH_SPRING_CONFIG_USERNAME}'
      - 'VSPH_SPRING_CONFIG_PASSWORD=${VSPH_SPRING_CONFIG_PASSWORD}'
    depends_on:
      - vsph-vault
      - vsph-config-server
    networks:
      - visphere-infra-network

  vsph-postgresql-db:
    container_name: vsph-postgresql-db
    image: postgres:15.4-alpine
    ports:
      - '${MSPH_DEV_POSTGRESQL_PORT}:5432'
    environment:
      - 'POSTGRES_USER=${MSPH_POSTGRES_USERNAME}'
      - 'POSTGRES_PASSWORD=${MSPH_POSTGRES_PASSWORD}'
      - 'POSTGRES_PASSWORD=${VSPH_POSTGRES_PASSWORD}'
      - 'POSTGRES_DB=postgres'
    volumes:
      - ./.volumes/db/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.volumes/db/postgres-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 6
    networks:
      - visphere-infra-network

  vsph-cassandra-db:
    container_name: vsph-cassandra-db
    image: bitnami/cassandra:4.1.3
    ports:
      - '${VSPH_DEV_CASSANDRA_PORT}:9042'
    volumes:
      - ./.volumes/db/cassandra-volume:/bitnami
    environment:
      - 'CASSANDRA_CLUSTER_NAME=vsph-cluster'
      - 'CASSANDRA_PASSWORD_SEEDER=yes'
      - 'CASSANDRA_USER=${VSPH_CASSANDRA_USERNAME}'
      - 'CASSANDRA_PASSWORD=${VSPH_CASSANDRA_PASSWORD}'
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 6
    networks:
      - visphere-infra-network

  vsph-mailhog:
    container_name: vsph-mailhog
    image: mailhog/mailhog:v1.0.1
    ports:
      - '${VSPH_DEV_MAILHOG_PORT}:1025'
      - '${VSPH_DEV_MAILHOG_CLIENT_PORT}:8025'
    environment:
      - 'MH_STORAGE=maildir'
      - 'MH_MAILDIR_PATH=/home/mailhog'
    volumes:
      - ./.volumes/mail/mailhog-volume:/home/mailhog
      - ./.volumes/mail/mailhog.conf:/etc/supervisor/conf.d
      - ./.volumes/mail/mailhog-auth.txt:/etc/mailhog-auth.txt
    networks:
      - visphere-infra-network

  vsph-vault:
    container_name: vsph-vault
    image: hashicorp/vault:1.14
    ports:
      - '${VSPH_DEV_VAULT_PORT}:8200'
    volumes:
      - ./.volumes/vault/vault-volume:/vault/data:rw
      - ./.volumes/vault:/vault/config
      - ./.env:/.env
    environment:
      - 'VAULT_ADDR=http://127.0.0.1:8200'
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.hcl
    networks:
      - visphere-infra-network

  vsph-s3:
    container_name: vsph-s3
    image: bitnami/minio:2023.9.27
    ports:
      - '${VSPH_DEV_S3_API_PORT}:9000'
      - '${VSPH_DEV_S3_PORT}:9001'
    environment:
      - 'MINIO_ROOT_USER=${VSPH_S3_USERNAME}'
      - 'MINIO_ROOT_PASSWORD=${VSPH_S3_PASSWORD}'
      - 'MINIO_DEFAULT_BUCKETS=spheres:public,users:public'
      - 'MINIO_SCHEME=http'
    volumes:
      - ./.volumes/s3/s3-volume:/bitnami/minio/data
    healthcheck:
      test: 'curl --fail http://localhost:9000/minio/health/live || exit 1'
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - visphere-infra-network

  vsph-api-gateway:
    container_name: vsph-api-gateway
    ports:
      - '5055:8080'
    image: milosz08/vsph-api-gateway:latest
    pull_policy: always
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'
      - 'VSPH_DOCKER_LANDING_PORT=${VSPH_DOCKER_LANDING_PORT}'
      - 'VSPH_DOCKER_CLIENT_PORT=${VSPH_DOCKER_CLIENT_PORT}'
      - 'VSPH_VAULT_ROOT_TOKEN=${VSPH_VAULT_ROOT_TOKEN}'
      - 'VSPH_SPRING_CONFIG_USERNAME=${VSPH_SPRING_CONFIG_USERNAME}'
      - 'VSPH_SPRING_CONFIG_PASSWORD=${VSPH_SPRING_CONFIG_PASSWORD}'
    depends_on:
      - vsph-config-server
      - vsph-discovery-server
    networks:
      - visphere-infra-network

  vsph-account-service:
    extends:
      file: ./vsph-account-service/docker-compose.yml
      service: vsph-account-service-template
    depends_on:
      - vsph-config-server
      - vsph-discovery-server
      - vsph-api-gateway
      - vsph-postgresql-db
      - vsph-s3
    networks:
      - visphere-infra-network

  vsph-auth-service:
    extends:
      file: ./vsph-auth-service/docker-compose.yml
      service: vsph-auth-service-template
    depends_on:
      - msph-config-server
      - msph-discovery-server
      - msph-api-gateway
      - msph-postgresql-db
      - msph-s3
      - vsph-config-server
      - vsph-discovery-server
      - vsph-api-gateway
      - vsph-postgresql-db
      - vsph-s3
    networks:
      - visphere-infra-network

  vsph-misc-service:
    extends:
      file: ./vsph-misc-service/docker-compose.yml
      service: vsph-misc-service-template
    depends_on:
      - vsph-config-server
      - vsph-discovery-server
      - vsph-api-gateway
    networks:
      - visphere-infra-network

  vsph-multimedia-service:
    extends:
      file: ./vsph-multimedia-service/docker-compose.yml
      service: vsph-multimedia-service-template
    depends_on:
      - vsph-config-server
      - vsph-discovery-server
      - vsph-api-gateway
      - vsph-s3
    networks:
      - visphere-infra-network

  vsph-notification-service:
    extends:
      file: ./vsph-notification-service/docker-compose.yml
      service: vsph-notification-service-template
    depends_on:
      - vsph-config-server
      - vsph-discovery-server
      - vsph-api-gateway
    networks:
      - visphere-infra-network

networks:
  visphere-infra-network:
    driver: bridge
